/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.consumer;

import core.db.dbconn;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.ByteArrayInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.catalina.Session;
import java.util.UUID;
import java.util.List;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

/**
 *
 * @author Mubasshir
 */
public class UploadDecoy extends HttpServlet {

    /**
     * Processes requests for both HTTP
     * <code>GET</code> and
     * <code>POST</code> methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession(true);
       
        boolean errored = false;
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        try {
           
            DiskFileItemFactory factory = new DiskFileItemFactory();
            ServletFileUpload sfu  = new ServletFileUpload(factory);

            if (! ServletFileUpload.isMultipartContent(request)) {
                errored=true;
                
            }if (errored) {
                session.setAttribute("flash_message", "Failed to save. Try again");
                session.setAttribute("flash_type", "error");
                response.sendRedirect("uploaddecoy.jsp");
           
             } 
// parse request
            
            List items = sfu.parseRequest(request);
            FileItem title = (FileItem) items.get(0);
            String   filetitle =  title.getString();
            FileItem type = (FileItem) items.get(2);
            String   filetype =  title.getString();
            filetitle.concat(filetype);
            
   // out.print("AAAAA"+session.getAttributeNames()+"nmae"+session.getAttribute("user")+"id"+session.getAttribute("userid"));
            FileItem file = (FileItem)items.get(1);
          String hmac=core.db.Hmac.hmac(filetitle+file.getSize());
           //int uid=Integer.parseInt(session.getAttribute("userid").toString());          
            Class.forName("com.mysql.jdbc.Driver").newInstance();
          //  out.print("1"+uid+"XXXXXXX"+is+session.getAttributeNames());
            Connection con = null;
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db2", "root", "");
        //   PreparedStatement pre = con.prepareStatement("insert into decoyfiles(dfile_name,dfile,dfile_size,dhmac) values(?,?,?,?)");
         PreparedStatement pre = con.prepareStatement("insert into files(file_name,file,file_size,hmac,uid) values(?,?,?,?,1)");
            
           //out.print("21");
           pre.setBinaryStream(2, file.getInputStream(),(int)file.getSize());
   pre.setString(1, filetitle);
            pre.setInt(3, (int)file.getSize());
           pre.setString(4, hmac);
           // pre.setInt(5, 1);
            int rows = pre.executeUpdate();            
         if(!(rows>0))
            errored=true;
          if (errored) {
                    session.setAttribute("flash_message", "Failed to save. Try again");
                session.setAttribute("flash_type", "error");
                response.sendRedirect("uploaddecoy.jsp");
           
            } 
                session.setAttribute("file", "uploaded");
                response.sendRedirect("uploaddecoy.jsp");
        } catch (Exception e) {
            
            out.println("error"+e);

        } finally {
            out.close();
        }
    }

   

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP
     * <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP
     * <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>
}
